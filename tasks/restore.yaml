---
# Restore tasks file for ansible-role-suricata

- name: "Collect list of Suricata systemd unit files"
  find:
    paths: /usr/lib/systemd/system
    patterns: 'ids*,suricata*'
    file_type: file
  register: output

- name: "Set fact for found Suricata systemd unit files"
  set_fact:
    systemd_services: >-
      {{ output.files
         | map(attribute='path')
         | map('basename')
         | reject('equalto', 'suricata.service')
         | list
      }}

- name: "Set fact for found Suricata Interfaces"
  set_fact:
    suricata_interfaces: "{{ suricata_interfaces | default([]) + [item.split('-')[1].split('.')[0]] }}"
  loop: "{{ systemd_services }}"

#- name: "Stop Suricata daemons"
#  service:
#    name: "{{ item }}"
#    state: stopped
#  #ignore_errors: true
#  loop: "{{ systemd_services }}"

#- name: "Delete files in /etc/suricata"
#  shell: find /etc/suricata -mindepth 1 -print -delete
#  ignore_errors: true

- name: "Delete files in /data/ids/interface/"
  shell: find /data/ids/{{ item }} -mindepth 1 -print
  ignore_errors: true
  loop: "{{ suricata_interfaces }}"

#- name: "Restore backup of /etc/suricata"
#  unarchive:
#    src: "{{ archive_file }}"
#    dest: /etc/suricata
#    owner: "ansible"
#    group: "ansible"
#    remote_src: true
#  ignore_errors: true

#- name: "Force systemd to reread configs"
#  systemd_service:
#    daemon_reload: true

#- name: "Start Suricata IDS interface daemons"
#  service:
#    name: "{{ item }}"
#    state: started
#  #ignore_errors: true
#  loop: "{{ systemd_services }}"
